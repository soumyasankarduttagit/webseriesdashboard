{"version":3,"sources":["assets/trophy.svg","assets/star.svg","components/Menu.js","components/Caption.js","utils/kpiData.js","components/Kpi.js","components/Chart.js","components/Subscribers.js","components/Revenue.js","components/AwardRating.js","utils/chartConfig.js","utils/config.js","components/Dashboard.js","App.js","serviceWorker.js","index.js","assets/doller.svg","assets/rss.svg"],"names":["module","exports","__webpack_require__","p","Menu","_this","this","menulist","props","menus","map","menu","react_default","a","createElement","className","active","key","id","onClick","handleClick","value","Component","Caption","caption","kpiData","Netflix","icon","feed","iconType","dollar","trophy","star","Amazon","Hulu","HBO","Kpi","cardlist","cards","kpi","href","src","alt","ReactFC","fcRoot","FusionCharts","Charts","overlapp","widgets","power","world","FusionTheme","Chart","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","chart","React","createRef","state","datasource","initialized","bind","assertThisInitialized","options","creditLabel","ReactDOM","unmountComponentAtNode","findDOMNode","current","ReactFC_default","assign","fcEvent-initialized","ref","Subscribers","components_Chart","subRegion","subscriptionConfig","demogrphyconfig","Revenue","revenueChartConfigs","AwardRating","imdbRatingConfig","dataSource","data","sort","b","reverse","awardIcon","awardValue","awardConfigs","ratingIcon","ratingValue","chartConfig","revenueChartCosmatics","bgcolor","canvasBgColor","animation","theme","plotfillalpha","plotFillAngle","showCanvasBorder","showLabels","divLineAlpha","divlineColor","showYAxisValues","showdivline","yaxisminvalue","placeValuesInside","showLegend","showShadow","paletteColors","drawAnchors","showAlternateHGridColor","drawCrossLine","plotColorinTooltip","baseFontColor","valueFontColor","valueFontSize","baseFontSize","baseFont","toolTipBgColor","toolTipColor","toolTipBorderColor","tooltipBorderAlpha","showToolTipShadow","toolTipPadding","numberPrefix","formatNumberScale","numberScaleUnit","numberScaleValue","plotToolText","demographyChartCosmatics","pieRadius","doughnutRadius","plotBorderalpha","enableSlicing","enableSmartLabels","showHoverEffect","plotHoverEffect","enableRotation","plotBorderHoverAlpha","showlegend","startingAngle","labelFontColor","smartLineColor","subscriptionChartCosmatics","numbersuffix","plotSpacePercent","showdivlineValues","crossLineColor","crossLineAlpha","showLimits","showValues","divlineAlpha","awardChartCosmatics","shadow","legendPadding","legenditemfontcolor","subregionChartCosmatics","labelfontcolor","legendItemFontSize","showvalue","showBorder","borderAlpha","fillAlpha","borderColor","borderThickness","showEntityHoverEffect","labelFontcolor","legendBorderThickness","entityToolText","imdbRatingChartCosmatics","showDivLineValues","axisLineAlpha","yaxislinecolor","showYAxisLine","anchorRadius","config","type","width","height","containerBackgroundOpacity","dataFormat","yaxismaxvalue","categories","category","label","dataset","renderAs","chartCosmatics","yaxisMaxValue","yAxisMaxValue","seriesname","colorrange","minvalue","startlabel","endlabel","code","gradient","alpha","color","maxvalue","useHoverColor","revenue","subscribers","emmy","rating","Dashboard","menuClick","setState","KpiData","DataSource","forEach","kpiClick","sub","scrollIntoView","block","behavior","rev","inline","award","components_Menu","components_Caption","components_Kpi","components_Subscribers","components_Revenue","components_AwardRating","App","components_Dashboard","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43a3bb3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trophy.9a13eaba.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.048aef30.svg\";","import React, { Component } from 'react';\r\nclass Menu extends Component {\r\n    render() {\r\n        const menulist = this.props.menus.map(menu => {\r\n\r\n            return (\r\n\r\n                <div className={menu.active ? \"is-menu is-active\" : \"is-menu\"} key={menu.id} onClick={() => { this.props.handleClick(menu.value) }}>{menu.value}</div>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"navbar-end\">\r\n                <div className=\"navbar-brand\" >\r\n                    {menulist}\r\n                </div >\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Menu;","import React from 'react';\r\nconst Caption =(caption)=>{\r\nreturn(\r\n <section className=\" section is-header\">\r\n        <h1 className=\"is-underlined\">{caption.caption}</h1>\r\n </section>\r\n);\r\n}\r\nexport default Caption","import dollar from '../assets/doller.svg';\r\nimport feed from '../assets/rss.svg';\r\nimport trophy from '../assets/trophy.svg';\r\nimport star from '../assets/star.svg';\r\nexport default {\r\n    Netflix: [\r\n        { id: \"Subscribers\", value: \"539.8M\", icon: feed,iconType:\"badge is-feed\" },\r\n        { id: \"Revenue\", value: \"12.8B\", icon: dollar,iconType:\"badge is-dollar\", },\r\n        { id: \"Emmy Awards\", value: \"23\", icon: trophy, iconType:\"badge is-trophy\" },\r\n        { id: \"IMDb Rating\", value: \"8.34\", icon: star,iconType:\"badge is-star\" }\r\n    ],\r\n    Amazon: [\r\n        { id: \"Subscribers\", value: \"815M\", icon: feed,iconType:\"badge is-feed\" },\r\n        { id: \"Revenue\", value: \"20.5B\", icon: dollar,iconType:\"badge is-dollar\" },\r\n        { id: \"Emmy Awards\", value: \"5\", icon: trophy, iconType:\"badge is-trophy\" },\r\n        { id: \"IMDb Rating\", value: \"7.58\", icon: star,iconType:\"badge is-star\" }\r\n    ],\r\n    Hulu: [\r\n        { id: \"Subscribers\", value: \"25M\", icon: feed,iconType:\"badge is-feed\" },\r\n        { id: \"Revenue\", value: \"2.85B\", icon: dollar,iconType:\"badge is-dollar\" },\r\n        { id: \"Emmy Awards\", value: \"1\", icon: trophy, iconType:\"badge is-trophy\" },\r\n        { id: \"IMDb Rating\", value: \"7.07\", icon: star,iconType:\"badge is-star\" }\r\n    ],\r\n    HBO: [\r\n        { id: \"Subscribers\", value: \"150M\", icon: feed,iconType:\"badge is-feed\" },\r\n        { id: \"Revenue\", value: \"6B\", icon: dollar,iconType:\"badge is-dollar\" },\r\n        { id: \"Emmy Awards\", value: \"6\", icon: trophy, iconType:\"badge is-trophy\" },\r\n        { id: \"IMDb Rating\", value: \"8.04\", icon: star,iconType:\"badge is-star\" }\r\n    ]\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nclass Kpi extends Component {\r\n    render() {\r\n        const cardlist = this.props.cards.map(kpi => {\r\n\r\n            return (\r\n                <a className=\"column is-tablet is-one-quarter-desktop is-half-tablet is-full-mobile\" key={kpi.id} href=\"#section\" onClick={() => { this.props.handleClick(kpi.id) }}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-content\">\r\n                            <div className=\"columns columns-kpi \">\r\n                                <div className=\"column header\">\r\n                                    <div className=\"column indicator\" >{kpi.value}</div>\r\n                                    <div className={kpi.iconType}>\r\n                                        <img src={kpi.icon} alt=\"\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"sub-indicator\">{kpi.id}</div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            \r\n            );\r\n        });\r\n        return (\r\n            <div className=\"columns is-mobile\">\r\n            { cardlist }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Kpi;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FusionCharts from \"fusioncharts\"\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport widgets from \"fusioncharts/fusioncharts.widgets\";\r\nimport power from \"fusioncharts/fusioncharts.powercharts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nimport map from \"fusioncharts/fusioncharts.maps\";\r\nimport world from \"fusioncharts/maps/fusioncharts.world\";\r\nimport overlapp from \"fusioncharts/fusioncharts.overlappedcolumn2d\";\r\nimport ReactFC from 'react-fusioncharts';\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, overlapp, widgets, power, map, world, FusionTheme);\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chart = React.createRef();\r\n        this.state = {\r\n            datasource: {}\r\n        }\r\n        this.initialized = this.initialized.bind(this);\r\n    }\r\n\r\n    initialized(chart) {\r\n        FusionCharts.options.creditLabel = false;\r\n       \r\n\r\n    }\r\n    componentDidMount(){\r\n        ReactDOM.unmountComponentAtNode(ReactDOM.findDOMNode(this.chart.current));\r\n    }\r\n    componentWillUnmount() {\r\n      \r\n       ReactDOM.unmountComponentAtNode(ReactDOM.findDOMNode(this.chart.current));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           \r\n            <ReactFC\r\n                {...this.props.datasource}\r\n                fcEvent-initialized={this.initialized} \r\n                ref={this.chart}\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\nexport default Chart\r\n","import React, { Component } from 'react';\r\nimport Chart from './Chart';\r\nclass Subscribers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <section id=\"subscribers\" className=\"section is-top-padded\">\r\n                <span className=\"has-image\">\r\n                    <span className=\"badge is-feed\">\r\n                        <img src={this.props.icon} alt=\"\" /></span>\r\n                    <h3 className=\"snapshot image-has-text\"> Subscribers</h3>\r\n                    <span className=\"rect is-status\">\r\n                        {this.props.value}\r\n                    </span>\r\n                </span>\r\n                <div className=\"tile is-ancestor\">\r\n                    <div className=\"tile is-6 is-parent\">\r\n                        <div className=\"tile is-12 is-child box\">\r\n                            <p className=\"sub-caption\"> Subscription by Region</p>\r\n                            <Chart datasource={this.props.datasource.subRegion} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tile is-6 is-vertical is-parent\">\r\n                        <div className=\"tile is-child box\">\r\n                            <p className=\"sub-caption\">Global Subscribers</p>\r\n                            <p className=\"is-smaller\">Year Wise(In Million)</p>\r\n                            <Chart datasource={this.props.datasource.subscriptionConfig} />\r\n                        </div>\r\n                        <div className=\"tile is-child box\">\r\n                            <p className=\"sub-caption\">Demographic Subscription</p>\r\n                            <Chart datasource={this.props.datasource.demogrphyconfig} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Subscribers","import React, { Component } from 'react';\r\nimport Chart from './Chart';\r\nclass Revenue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"revenue\" className=\"section\">\r\n                <span className=\"has-image\">\r\n                    <span className=\"badge is-dollar\">\r\n                        <img src={this.props.icon} alt=\"\" /></span>  <h3 className=\"snapshot image-has-text\">Revenue</h3>\r\n                    <span className=\"rect is-status\">\r\n                        {this.props.value}\r\n                    </span>\r\n                </span>\r\n                <div className=\"columns is-multiline is-paddingless\">\r\n                    <div className=\"column is-full-tablet is-full-desktop is-fullhd \">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-content\">\r\n                                <p className=\"sub-caption\">Global Revenue</p>\r\n                                <p className=\"is-smaller\"></p>\r\n                                <Chart datasource={this.props.datasource.revenueChartConfigs} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default Revenue","import React, { Component } from 'react';\r\nimport Chart from './Chart';\r\nclass AwardRating extends Component {\r\n    render() {\r\n        this.props.datasource.imdbRatingConfig.dataSource.data.sort((a,b)=>{return a.value-b.value}).reverse();\r\n        return (\r\n            <section id=\"awardsRating\" className=\"section\">\r\n                <div className=\"columns is-multiline is-paddingless\">\r\n                    <div className=\"column  is-half-desktop is-half-fullhd\">\r\n                        <span className=\"has-image\">\r\n                            <span className=\"badge is-trophy\">\r\n                                <img src={this.props.awardIcon} alt=\"\" /></span>  <h3 className=\"snapshot image-has-text\">Awards</h3>\r\n                            <span className=\"rect is-status\">\r\n                                {this.props.awardValue}\r\n                            </span>\r\n                        </span>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-content\">\r\n                                <p className=\"sub-caption\">Emmy Awards</p>\r\n                                <p className=\"is-smaller\">Nominations vs Wins</p>\r\n                                <Chart datasource={this.props.datasource.awardConfigs} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column is-half-desktop is-half-fullhd\">\r\n                        <span className=\"has-image\">\r\n                            <span className=\"badge is-star\">\r\n                                <img src={this.props.ratingIcon} alt=\"\" /></span>  <h3 className=\"snapshot image-has-text\">Ratings</h3>\r\n                            <span className=\"rect is-status\">\r\n                                {this.props.ratingValue}\r\n                            </span>\r\n                        </span>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-content\">\r\n                                <p className=\"sub-caption\">IMDb Ratings</p>\r\n                                <p className=\"is-smaller\">Genre Wise</p>\r\n                                <Chart datasource={this.props.datasource.imdbRatingConfig} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\nexport default AwardRating","export default {\r\n    revenueChartCosmatics: {\r\n        bgcolor: \"#282A2E\",\r\n        canvasBgColor: \"#282A2E\",\r\n        animation: \"0\",\r\n        theme: \"fusion\",\r\n        plotfillalpha: \"15\",\r\n        plotFillAngle: \"90\",\r\n        showCanvasBorder: \"0\",\r\n        showLabels: \"1\",\r\n        divLineAlpha: \"50\",\r\n        divlineColor: \"#434456\",\r\n        showYAxisValues: \"1\",\r\n        showdivline: \"1\",\r\n        yaxisminvalue: \"1000000000\",\r\n        placeValuesInside: \"0\",\r\n        showLegend: \"0\",\r\n        showShadow: \"0\",\r\n        paletteColors: \"#62B58F\",\r\n        drawAnchors: \"0\",\r\n        showAlternateHGridColor: \"0\",\r\n        drawCrossLine: \"0\",\r\n        plotColorinTooltip: \"0\",\r\n        baseFontColor: \"#ffffff\",\r\n        valueFontColor: \"#b4b4b6\",\r\n        valueFontSize: \"14\",\r\n        baseFontSize: \"12\",\r\n        baseFont: \"Roboto\",\r\n        toolTipBgColor: \"#525357\",\r\n        toolTipColor: \"#F8F8F8\",\r\n        toolTipBorderColor: \"#525357\",\r\n        tooltipBorderAlpha: \"20\",\r\n        showToolTipShadow: \"1\",\r\n        toolTipPadding: \"10\",\r\n        numberPrefix: \"$\",\r\n        formatNumberScale: \"1\",\r\n        numberScaleUnit: \"B\",\r\n        numberScaleValue: \"1000000000\",\r\n        plotToolText: \"<b>Global Revenue</b></br><b>Year : </b>$label</br><b>Revenue :</b> $dataValue\"\r\n\r\n    },\r\n    demographyChartCosmatics: {\r\n        bgcolor: \"#282A2E\",\r\n        pieRadius: \"50\",\r\n        doughnutRadius: \"40\",\r\n        paletteColors: \"#D9D4F6,#8E81E3,#6957DA\",\r\n        canvasBgColor: \"#282A2E\",\r\n        plotBorderalpha: \"0\",\r\n        theme: \"fusion\",\r\n        enableSlicing: \"0\",\r\n        enableSmartLabels:\"0\",\r\n        showHoverEffect:\"0\",\r\n        plotHoverEffect:\"0\",\r\n        enableRotation: \"0\",\r\n        plotBorderHoverAlpha: \"0\",\r\n        showlegend: \"0\",\r\n        startingAngle: \"90\",\r\n        valueFontColor: \"#ffffff\",\r\n        labelFontColor: \"#ffffff\",\r\n        smartLineColor: \"#81809C\",\r\n        baseFontSize: \"12\",\r\n        baseFontColor: \"#61DAFB\",\r\n        toolTipBgColor: \"#525357\",\r\n        toolTipColor: \"#F8F8F8\",\r\n        toolTipBorderColor: \"#525357\",\r\n        tooltipBorderAlpha: \"20\",\r\n        showToolTipShadow: \"1\",\r\n        toolTipPadding: \"10\",\r\n        plotToolText: \"<b>Age Group :</b> $label</br> <b>Subscribers :</b> $datavalue%\"\r\n\r\n    },\r\n    subscriptionChartCosmatics: {\r\n        theme: \"fusion\",\r\n        bgcolor: \"#282A2E\",\r\n        canvasBgColor: \"#282A2E\",\r\n        paletteColors: \"#6957DA\",\r\n        numbersuffix: \"M\",\r\n        plotSpacePercent: \"60\",\r\n        formatNumberScale: \"1\",\r\n        showdivlineValues: \"0\",\r\n        drawCrossLine: \"1\",\r\n        crossLineColor: \"#575961\",\r\n        crossLineAlpha: \"15\",\r\n        showLimits: \"0\",\r\n        showValues: \"1\",\r\n        divlineAlpha: \"0\",\r\n        baseFontSize: \"12\",\r\n        baseFont: \"Roboto\",\r\n        toolTipBgColor: \"#525357\",\r\n        toolTipColor: \"#F8F8F8\",\r\n        toolTipBorderColor: \"#525357\",\r\n        tooltipBorderAlpha: \"20\",\r\n        showToolTipShadow: \"1\",\r\n        toolTipPadding: \"10\",\r\n        plotToolText: \"<b>Year :</b> $label </br><b>Subscribers :</b> $datavalue\",\r\n        labelFontColor: \"#ffffff\",\r\n        valueFontColor: \"#b4b4b6\"\r\n\r\n    },\r\n    awardChartCosmatics: {\r\n        bgcolor: \"#282A2E\",\r\n        canvasBgColor: \"#282A2E\",\r\n        showLabels: \"1\",\r\n        drawCrossLine: \"0\",\r\n        divLineAlpha: \"0\",\r\n        showYAxisValues: \"0\",\r\n        showValues: \"1\",\r\n        placeValuesInside: \"0\",\r\n        shadow: \"0\",\r\n        legendPadding: \"0\",\r\n        showShadow: \"0\",\r\n        paletteColors: \"#942F1C,#DD614A\",\r\n        drawAnchors: \"0\",\r\n        showAlternateHGridColor: \"0\",\r\n        legenditemfontcolor: \"#ffffff\",\r\n        plotColorinTooltip: \"0\",\r\n        valueFontColor: \"#b4b4b6\",\r\n        labelFontColor: \"#ffffff\",\r\n        baseFontSize: \"12\",\r\n        baseFont: \"Roboto\",\r\n        toolTipBgColor: \"#525357\",\r\n        toolTipColor: \"#F8F8F8\",\r\n        toolTipBorderColor: \"#525357\",\r\n        tooltipBorderAlpha: \"20\",\r\n        showToolTipShadow: \"1\",\r\n        toolTipPadding: \"10\",\r\n        plotToolText: \"<b>Year :</b> $label</br><b>$seriesname :</b> $datavalue\",\r\n        theme: \"fusion\"\r\n\r\n    },\r\n    subregionChartCosmatics: {\r\n        bgcolor: \"#282A2E\",\r\n        canvasBgColor: \"#282A2E\",\r\n        numbersuffix: \"M\",\r\n        formatNumberScale: \"0\",\r\n        baseFontSize: \"12\",\r\n        baseFontColor:\"#81809C\",\r\n        labelfontcolor:\"#81809C\",\r\n        legendItemFontSize: \"12\",\r\n        baseFont: \"Roboto\",\r\n        showvalue: \"0\",\r\n        showBorder: \"1\",\r\n        borderAlpha: \"80\",\r\n        fillAlpha: \"100\",\r\n        borderColor: \"#5F636E\",\r\n        borderThickness: \"1\",\r\n        showHoverEffect: \"1\",\r\n        showEntityHoverEffect: \"1\",\r\n        labelFontcolor:\"#81809C\",\r\n        legenditemfontcolor: \"#ffffff\",\r\n        toolTipBgColor: \"#525357\",\r\n        toolTipColor: \"#F8F8F8\",\r\n        toolTipBorderColor: \"#525357\",\r\n        tooltipBorderAlpha: \"20\",\r\n        showToolTipShadow: \"1\",\r\n        toolTipPadding: \"10\",\r\n        legendBorderThickness: \"5\",\r\n        entityToolText: \"<b>Region : </b>$lname</br><b> Subscribers : </b>$dataValue\",\r\n        theme: \"fusion\"\r\n\r\n    },\r\n    imdbRatingChartCosmatics: {\r\n        bgcolor: \"#282A2E\",\r\n        paletteColors: \"#C79E24\",\r\n        divlineAlpha: \"0\",\r\n        canvasBgColor: \"#282A2E\",\r\n        labelFontColor: \"#ffffff\",\r\n        theme: \"fusion\",\r\n        showDivLineValues: \"0\",\r\n        showValues: \"1\",\r\n        baseFont: \"Roboto\",\r\n        valueFontColor: \"#b4b4b6\",\r\n        plotSpacePercent: \"60\",\r\n        axisLineAlpha: \"80\",\r\n        showYAxisValues: \"1\",\r\n        yaxislinecolor: \"#434456\",\r\n        showYAxisLine: \"1\",\r\n        showdivlineValues: \"1\",\r\n        baseFontColor:\"#ffffff\",\r\n        baseFontSize: \"12\",\r\n        toolTipBgColor: \"#525357\",\r\n        toolTipColor: \"#F8F8F8\",\r\n        toolTipBorderColor: \"#525357\",\r\n        tooltipBorderAlpha: \"20\",\r\n        showToolTipShadow: \"1\",\r\n        toolTipPadding: \"10\",\r\n        anchorRadius: \"60\",\r\n        plotToolText: \"<b>$seriesName<b></br><b>Genre :</b> $label</br><b>Rating :</b> $Value\"\r\n    },\r\n}","import chartCosmatics from './chartConfig';\r\nexport default {\r\n\r\n  Netflix: {\r\n    revenueChartConfigs: {\r\n      type: \"mscombi2d\",\r\n      width: \"100%\",\r\n      height: \"300\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: {\r\n          bgcolor: \"##282A2E\",\r\n          canvasBgColor: \"##282A2E\",\r\n          animation: \"0\",\r\n          theme: \"fusion\",\r\n          plotfillalpha: \"15\",\r\n          plotFillAngle: \"90\",\r\n          showCanvasBorder: \"0\",\r\n          showLabels: \"1\",\r\n          divLineAlpha: \"50\",\r\n          divlineColor: \"#434456\",\r\n          showYAxisValues: \"1\",\r\n          showdivline: \"1\",\r\n          yaxisminvalue: \"1000000000\",\r\n          yaxismaxvalue:\"14500000000\",\r\n          placeValuesInside: \"0\",\r\n          showLegend: \"0\",\r\n          showShadow: \"0\",\r\n          paletteColors: \"#62B58F\",\r\n          drawAnchors: \"0\",\r\n          showAlternateHGridColor: \"0\",\r\n          drawCrossLine: \"0\",\r\n          plotColorinTooltip: \"0\",\r\n          baseFontColor: \"#ffffff\",\r\n          valueFontColor: \"#b4b4b6\",\r\n          valueFontSize: \"14\",\r\n          baseFontSize: \"12\",\r\n          baseFont: \"Roboto\",\r\n          toolTipBgColor: \"#525357\",\r\n          toolTipColor: \"#F8F8F8\",\r\n          toolTipBorderColor: \"#525357\",\r\n          tooltipBorderAlpha: \"20\",\r\n          showToolTipShadow: \"1\",\r\n          toolTipPadding: \"10\",\r\n          numberPrefix: \"$\",\r\n          formatNumberScale: \"1\",\r\n          numberScaleUnit: \"B\",\r\n          numberScaleValue: \"1000000000\",\r\n          plotToolText: \"<b>Global Revenue</b></br><b>Year : </b>$label</br><b>Revenue : </b> $dataValue\"\r\n  \r\n      },\r\n        categories: [{\r\n          category: [{\r\n            label: \"2013\"\r\n          },\r\n          {\r\n            label: \"2014\"\r\n          },\r\n          {\r\n            label: \"2015\"\r\n          },\r\n          {\r\n            label: \"2016\"\r\n          },\r\n          {\r\n            label: \"2017\"\r\n          },\r\n          {\r\n            label: \"2018\"\r\n          }\r\n          ]\r\n        }],\r\n        dataset: [{\r\n          renderAs: \"splinearea\",\r\n          showValues: \"0\",\r\n          data: [\r\n\r\n            {\r\n              value: \"4374560000\"\r\n            },\r\n            {\r\n              value: \"5504660000\"\r\n            },\r\n            {\r\n              value: \"6779510000\"\r\n            },\r\n            {\r\n              value: \"8830670000\"\r\n            },\r\n            {\r\n              value: \"11692710000\"\r\n            },\r\n            {\r\n              value: \"12862520000\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          renderAs: \"spline\",\r\n          showValues: \"1\",\r\n          data: [\r\n\r\n            {\r\n              value: \"4374560000\"\r\n            },\r\n            {\r\n              value: \"5504660000\"\r\n            },\r\n            {\r\n              value: \"6779510000\"\r\n            },\r\n            {\r\n              value: \"8830670000\"\r\n            },\r\n            {\r\n              value: \"11692710000\"\r\n            },\r\n            {\r\n              value: \"12862520000\"\r\n            }\r\n          ]\r\n        }\r\n        ]\r\n      }\r\n    },\r\n    demogrphyconfig: {\r\n      type: \"doughnut2d\",\r\n      width: \"100%\",\r\n      height: \"160\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.demographyChartCosmatics,\r\n        \"data\": [{\r\n          \"label\": \"50-64 Years\",\r\n          \"value\": \"32\"\r\n        }, {\r\n          \"label\": \"30-49 Years\",\r\n          \"value\": \"36\"\r\n        },{\r\n          \"label\": \"18-29 Years\",\r\n          \"value\": \"32\"\r\n        } ]\r\n      }\r\n    },\r\n    subscriptionConfig: {\r\n\r\n      type: \"column2d\",\r\n      width: \"100%\",\r\n      height: \"204\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: {\r\n          theme: \"fusion\",\r\n          bgcolor: \"#282A2E\",\r\n          canvasBgColor: \"#282A2E\",\r\n          paletteColors: \"#6957DA\",\r\n          numbersuffix: \"M\",\r\n          plotSpacePercent: \"60\",\r\n          formatNumberScale: \"1\",\r\n          showdivlineValues: \"0\",\r\n          drawCrossLine: \"1\",\r\n          yaxisMaxValue:\"650\",\r\n          crossLineColor: \"#575961\",\r\n          crossLineAlpha: \"15\",\r\n          showLimits: \"0\",\r\n          showValues: \"1\",\r\n          divlineAlpha: \"0\",\r\n          baseFontSize: \"12\",\r\n          baseFont: \"Roboto\",\r\n          toolTipBgColor: \"#525357\",\r\n          toolTipColor: \"#F8F8F8\",\r\n          toolTipBorderColor: \"#525357\",\r\n          tooltipBorderAlpha: \"20\",\r\n          showToolTipShadow: \"1\",\r\n          toolTipPadding: \"10\",\r\n          plotToolText: \"<b>Year : </b>$label </br><b>Subscribers :</b> $datavalue\",\r\n          labelFontColor: \"#ffffff\",\r\n          valueFontColor: \"#81809C\"\r\n  \r\n      },\r\n        data: [\r\n\r\n          {\r\n            label: \"2013\",\r\n            value: \"158.5\"\r\n          },\r\n          {\r\n            label: \"2014\",\r\n            value: \"208.86\"\r\n          },\r\n          {\r\n            label: \"2015\",\r\n            value: \"271.75\"\r\n          },\r\n          {\r\n            label: \"2016\",\r\n            value: \"345.22\"\r\n          },\r\n          {\r\n            label: \"2017\",\r\n            value: \"429.53\"\r\n          },\r\n          {\r\n            label: \"2018\",\r\n            value: \"539.82\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    awardConfigs: {\r\n      type: \"overlappedColumn2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart:  {\r\n          bgcolor: \"#282A2E\",\r\n          canvasBgColor: \"#282A2E\",\r\n          showLabels: \"1\",\r\n          drawCrossLine: \"0\",\r\n          divLineAlpha: \"0\",\r\n          showYAxisValues: \"0\",\r\n          showValues: \"1\",\r\n          placeValuesInside: \"0\",\r\n          shadow: \"0\",\r\n          legendPadding: \"0\",\r\n          yAxisMaxValue: 130,\r\n          showShadow: \"0\",\r\n          paletteColors: \"#942F1C,#DD614A\",\r\n          drawAnchors: \"0\",\r\n          showAlternateHGridColor: \"0\",\r\n          legenditemfontcolor: \"#ffffff\",\r\n          plotColorinTooltip: \"0\",\r\n          valueFontColor: \"#b4b4b6\",\r\n          labelFontColor: \"#ffffff\",\r\n          baseFontSize: \"12\",\r\n          baseFont: \"Roboto\",\r\n          toolTipBgColor: \"#525357\",\r\n          toolTipColor: \"#F8F8F8\",\r\n          toolTipBorderColor: \"#525357\",\r\n          tooltipBorderAlpha: \"20\",\r\n          showToolTipShadow: \"1\",\r\n          toolTipPadding: \"10\",\r\n          plotToolText: \"<b>Year :</b> $label</br><b>$seriesname :</b> $datavalue\",\r\n          theme: \"fusion\"\r\n  \r\n      },\r\n        categories: [{\r\n          category: [{\r\n            label: \"2013\"\r\n          }, {\r\n            label: \"2014\"\r\n          }, {\r\n            label: \"2015\"\r\n          }, {\r\n            label: \"2016\"\r\n          }, {\r\n            label: \"2017\"\r\n          }, {\r\n            label: \"2018\"\r\n          }]\r\n        }],\r\n        dataset: [{\r\n          seriesname: \"Nominations\",\r\n          data: [{\r\n            value: \"13\"\r\n          }, {\r\n            value: \"31\"\r\n          }, {\r\n            value: \"34\"\r\n          }, {\r\n            value: \"54\"\r\n          }, {\r\n            value: \"91\"\r\n          }, {\r\n            value: \"112\"\r\n          }]\r\n        }, {\r\n          seriesname: \"Wins\",\r\n          data: [{\r\n            value: \"3\"\r\n          }, {\r\n            value: \"7\"\r\n          }, {\r\n            value: \"2\"\r\n          }, {\r\n            value: \"9\"\r\n          }, {\r\n            value: \"20\"\r\n          }, {\r\n            value: \"23\"\r\n          }]\r\n        }]\r\n      }\r\n    },\r\n    subRegion: {\r\n      type: \"world\",\r\n      width: \"100%\",\r\n      height: \"430\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.subregionChartCosmatics,\r\n        colorrange: {\r\n          minvalue: \"0\",\r\n          startlabel: \"Low\",\r\n          endlabel: \"High\",\r\n          code: \"#4A4C4F\",\r\n          gradient: \"1\",\r\n          alpha: 0,\r\n          color: [{\r\n            minvalue: \"0\",\r\n            maxvalue: \"1\",\r\n            code: \"#DEDAF1\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"2\",\r\n            maxvalue: \"5\",\r\n            code: \"#BEB3E2\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"5\",\r\n            maxvalue: \"10\",\r\n            code: \"#ADA1DB\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"11\",\r\n            maxvalue: \"20\",\r\n            code: \"#786BC3\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"21\",\r\n            maxvalue: \"70\",\r\n            code: \"#524CB5\",\r\n\r\n          }\r\n\r\n          ]\r\n        },\r\n        \"data\": [{\r\n          \"id\": \"NA\",\r\n          \"value\": \"66\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"SA\",\r\n          \"value\": \"32\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AS\",\r\n          \"value\": \"17\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"EU\",\r\n          \"value\": \"5\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AF\",\r\n          \"value\": \"3\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AU\",\r\n          \"value\": \"1\",\r\n          useHoverColor: \"0\"\r\n        }\r\n        ]\r\n\r\n      },\r\n\r\n    },\r\n    imdbRatingConfig: {\r\n      type: \"bar2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.imdbRatingChartCosmatics,\r\n\r\n        data: [{\r\n          label: \"Action\",\r\n          value: \"8.4\"\r\n        },\r\n        {\r\n          label: \"Animation\",\r\n          value: \"8.5\"\r\n        },\r\n        {\r\n          label: \"Biography\",\r\n          value: \"8.8\"\r\n        },\r\n        {\r\n          label: \"Comedy\",\r\n          value: \"7\"\r\n        },\r\n        {\r\n          label: \"Documentary\",\r\n          value: \"8.6\"\r\n        },\r\n        {\r\n          label: \"Drama\",\r\n          value: \"8.5\"\r\n        },\r\n        {\r\n          label: \"Reality-TV\",\r\n          value: \"8.4\"\r\n        },\r\n        {\r\n          label: \"Thriller\",\r\n          value: \"8.2\"\r\n        }\r\n        ]\r\n\r\n      }\r\n\r\n    }\r\n  },\r\n  Amazon: {\r\n    revenueChartConfigs: {\r\n      type: \"mscombi2d\",\r\n      width: \"100%\",\r\n      height: \"300\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart:  {\r\n          bgcolor: \"#282A2E\",\r\n          canvasBgColor: \"#282A2E\",\r\n          animation: \"0\",\r\n          theme: \"fusion\",\r\n          plotfillalpha: \"15\",\r\n          plotFillAngle: \"90\",\r\n          showCanvasBorder: \"0\",\r\n          showLabels: \"1\",\r\n          divLineAlpha: \"50\",\r\n          divlineColor: \"#434456\",\r\n          showYAxisValues: \"1\",\r\n          showdivline: \"1\",\r\n          yaxisminvalue: \"1000000000\",\r\n          yaxismaxvalue:\"24000000000\",\r\n          placeValuesInside: \"0\",\r\n          showLegend: \"0\",\r\n          showShadow: \"0\",\r\n          paletteColors: \"#62B58F\",\r\n          drawAnchors: \"0\",\r\n          showAlternateHGridColor: \"0\",\r\n          drawCrossLine: \"0\",\r\n          plotColorinTooltip: \"0\",\r\n          baseFontColor: \"#ffffff\",\r\n          valueFontColor: \"#b4b4b6\",\r\n          valueFontSize: \"14\",\r\n          baseFontSize: \"12\",\r\n          baseFont: \"Roboto\",\r\n          toolTipBgColor: \"#525357\",\r\n          toolTipColor: \"#F8F8F8\",\r\n          toolTipBorderColor: \"#525357\",\r\n          tooltipBorderAlpha: \"20\",\r\n          showToolTipShadow: \"1\",\r\n          toolTipPadding: \"10\",\r\n          numberPrefix: \"$\",\r\n          formatNumberScale: \"1\",\r\n          numberScaleUnit: \"B\",\r\n          numberScaleValue: \"1000000000\",\r\n          plotToolText: \"<b>Global Revenue</b></br><b>Year : </b>$label</br><b>Revenue :</b> $dataValue\"\r\n  \r\n      },\r\n        categories: [{\r\n          category: [{\r\n            label: \"2015\"\r\n          },\r\n          {\r\n            label: \"2016\"\r\n          },\r\n          {\r\n            label: \"2017\"\r\n          },\r\n          {\r\n            label: \"2018\"\r\n          }\r\n          ]\r\n        }],\r\n        dataset: [{\r\n          renderAs: \"splinearea\",\r\n          showValues: \"0\",\r\n          data: [\r\n            {\r\n              value: \"13655000000\"\r\n            },\r\n            {\r\n              value: \"15555800000\"\r\n            },\r\n            {\r\n              value: \"17665800000\"\r\n            },\r\n            {\r\n\r\n              value: \"20501000000\"\r\n            }\r\n          ]\r\n\r\n        },\r\n        {\r\n          renderAs: \"spline\",\r\n          showValues: \"1\",\r\n          data: [\r\n            {\r\n              value: \"13655000000\"\r\n            },\r\n            {\r\n              value: \"15555800000\"\r\n            },\r\n            {\r\n              value: \"17665800000\"\r\n            },\r\n            {\r\n\r\n              value: \"20501000000\"\r\n            }\r\n          ]\r\n        }\r\n        ]\r\n      }\r\n    },\r\n    demogrphyconfig: {\r\n\r\n      type: \"doughnut2d\",\r\n      width: \"100%\",\r\n      height: \"160\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.demographyChartCosmatics,\r\n        \"data\": [ {\r\n          \"label\": \"50-64 Years\",\r\n          \"value\": \"10\"\r\n        }, {\r\n          \"label\": \"30-49 Years\",\r\n          \"value\": \"50\"\r\n        },{\r\n          \"label\": \"18-29 Years\",\r\n          \"value\": \"40\"\r\n        }]\r\n      }\r\n    },\r\n    subscriptionConfig: {\r\n\r\n      type: \"column2d\",\r\n      width: \"100%\",\r\n      height: \"204\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.subscriptionChartCosmatics,\r\n        data: [\r\n\r\n          {\r\n            label: \"2015\",\r\n            value: \"370\"\r\n          },\r\n          {\r\n            label: \"2016\",\r\n            value: \"590\"\r\n          },\r\n          {\r\n            label: \"2017\",\r\n            value: \"700\"\r\n          },\r\n          {\r\n            label: \"2018\",\r\n            value: \"815\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    awardConfigs: {\r\n      type: \"overlappedColumn2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.awardChartCosmatics,\r\n        categories: [{\r\n          category: [{\r\n            label: \"2015\"\r\n          }, {\r\n            label: \"2016\"\r\n          }, {\r\n            label: \"2017\"\r\n          }, {\r\n            label: \"2018\"\r\n          }]\r\n        }],\r\n        dataset: [{\r\n          seriesname: \"Nominations\",\r\n          data: [{\r\n            value: \"5\"\r\n          }, {\r\n            value: \"16\"\r\n          }, {\r\n            value: \"16\"\r\n          }, {\r\n            value: \"22\"\r\n          }]\r\n        }, {\r\n          seriesname: \"Wins\",\r\n          data: [{\r\n            value: \"2\"\r\n          }, {\r\n            value: \"2\"\r\n          }, {\r\n            value: \"0\"\r\n          }, {\r\n            value: \"5\"\r\n          }]\r\n        }]\r\n      }\r\n    },\r\n\r\n    subRegion: {\r\n      type: \"world\",\r\n      width: \"100%\",\r\n      height: \"430\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.subregionChartCosmatics,\r\n        colorrange: {\r\n          minvalue: \"0\",\r\n          startlabel: \"Low\",\r\n          endlabel: \"High\",\r\n          code: \"#4A4C4F\",\r\n          gradient: \"1\",\r\n          alpha: 0,\r\n          color: [{\r\n            minvalue: \"0\",\r\n            maxvalue: \"1\",\r\n            code: \"#DEDAF1\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"2\",\r\n            maxvalue: \"5\",\r\n            code: \"#BEB3E2\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"5\",\r\n            maxvalue: \"10\",\r\n            code: \"#ADA1DB\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"11\",\r\n            maxvalue: \"20\",\r\n            code: \"#786BC3\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"21\",\r\n            maxvalue: \"70\",\r\n            code: \"#524CB5\",\r\n\r\n          }\r\n\r\n          ]\r\n        },\r\n        \"data\": [{\r\n          \"id\": \"NA\",\r\n          \"value\": \"40.2\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"SA\",\r\n          \"value\": \"1.28\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AS\",\r\n          \"value\": \"20\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"EU\",\r\n          \"value\": \"11.4\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AF\",\r\n          \"value\": \"1\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AU\",\r\n          \"value\": \"2\",\r\n          useHoverColor: \"0\"\r\n        }\r\n        ]\r\n\r\n      },\r\n\r\n    },\r\n    imdbRatingConfig: {\r\n      type: \"bar2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.imdbRatingChartCosmatics,\r\n        data: [{\r\n          label: \"Adventure\",\r\n          value: \"8.4\"\r\n        },\r\n        {\r\n          label: \"Animation\",\r\n          value: \"6.5\"\r\n        },\r\n        {\r\n          label: \"Biography\",\r\n          value: \"7.2\"\r\n        },\r\n        {\r\n          label: \"Comedy\",\r\n          value: \"7.6\"\r\n        },\r\n        {\r\n          label: \"Documentary\",\r\n          value: \"7.3\"\r\n        },\r\n        {\r\n          label: \"Drama\",\r\n          value: \"8.2\"\r\n        },\r\n        {\r\n          label: \"Reality-TV\",\r\n          value: \"8.7\"\r\n        },\r\n        {\r\n          label: \"Thriller\",\r\n          value: \"8\"\r\n        }\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n  },\r\n  Hulu: {\r\n    kpiData: {\r\n      revenue: \"2.85B\",\r\n      subscribers: \"25M\",\r\n      emmy: \"1\",\r\n      rating: \"7.07\"\r\n    },\r\n    revenueChartConfigs: {\r\n      type: \"mscombi2d\",\r\n      width: \"100%\",\r\n      height: \"300\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.revenueChartCosmatics,\r\n        categories: [{\r\n          category: [{\r\n            label: \"2015\"\r\n          },\r\n          {\r\n            label: \"2016\"\r\n          },\r\n          {\r\n            label: \"2017\"\r\n          },\r\n          {\r\n            label: \"2018\"\r\n          }\r\n          ]\r\n        }],\r\n        \"dataset\": [{\r\n          renderAs: \"splinearea\",\r\n          showValues: \"0\",\r\n          data: [\r\n            {\r\n\r\n              value: \"1500000000\"\r\n            },\r\n            {\r\n\r\n              value: \"2000000000\"\r\n            },\r\n            {\r\n\r\n              value: \"2400000000\"\r\n            },\r\n            {\r\n\r\n              value: \"2800000000\"\r\n            }\r\n          ]\r\n\r\n        },\r\n        {\r\n          renderAs: \"spline\",\r\n          showValues: \"1\",\r\n          data: [\r\n            {\r\n\r\n              value: \"1500000000\"\r\n            },\r\n            {\r\n\r\n              value: \"2000000000\"\r\n            },\r\n            {\r\n\r\n              value: \"2400000000\"\r\n            },\r\n            {\r\n\r\n              value: \"2800000000\"\r\n            }\r\n          ]\r\n        }\r\n\r\n        ]\r\n\r\n      }\r\n    },\r\n    demogrphyconfig: {\r\n\r\n      type: \"doughnut2d\",\r\n      width: \"100%\",\r\n      height: \"160\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.demographyChartCosmatics,\r\n        \"data\": [ {\r\n          \"label\": \"50-64 Years\",\r\n          \"value\": \"16\"\r\n        }, {\r\n          \"label\": \"30-49 Years\",\r\n          \"value\": \"36\"\r\n        },{\r\n          \"label\": \"18-29 Years\",\r\n          \"value\": \"48\"\r\n        }]\r\n      }\r\n    },\r\n    subscriptionConfig: {\r\n\r\n      type: \"column2d\",\r\n      width: \"100%\",\r\n      height: \"204\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.subscriptionChartCosmatics,\r\n        data: [\r\n\r\n          {\r\n            label: \"2015\",\r\n            value: \"10\"\r\n          },\r\n          {\r\n            label: \"2016\",\r\n            value: \"12\"\r\n          },\r\n          {\r\n            label: \"2017\",\r\n            value: \"17\"\r\n          },\r\n          {\r\n            label: \"2018\",\r\n            value: \"25\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    awardConfigs: {\r\n      type: \"overlappedColumn2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.awardChartCosmatics,\r\n        categories: [{\r\n          category: [{\r\n            label: \"2017\"\r\n          }, {\r\n            label: \"2018\"\r\n          }]\r\n        }],\r\n        dataset: [{\r\n          seriesname: \"Nominations\",\r\n          data: [{\r\n            value: \"7\"\r\n          }, {\r\n            value: \"12\"\r\n          }]\r\n        }, {\r\n          seriesname: \"Wins\",\r\n          data: [{\r\n            value: \"5\"\r\n          }, {\r\n            value: \"1\"\r\n          }]\r\n        }]\r\n      }\r\n    },\r\n\r\n    subRegion: {\r\n      type: \"world\",\r\n      width: \"100%\",\r\n      height: \"430\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.subregionChartCosmatics,\r\n        colorrange: {\r\n          minvalue: \"0\",\r\n          startlabel: \"Low\",\r\n          endlabel: \"High\",\r\n          code: \"#4A4C4F\",\r\n          gradient: \"1\",\r\n          alpha: 0,\r\n          color: [{\r\n            minvalue: \"0\",\r\n            maxvalue: \"1\",\r\n            code: \"#DEDAF1\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"2\",\r\n            maxvalue: \"5\",\r\n            code: \"#BEB3E2\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"5\",\r\n            maxvalue: \"10\",\r\n            code: \"#ADA1DB\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"11\",\r\n            maxvalue: \"20\",\r\n            code: \"#786BC3\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"21\",\r\n            maxvalue: \"70\",\r\n            code: \"#524CB5\",\r\n\r\n          }\r\n          ]\r\n        },\r\n        \"data\": [{\r\n          \"id\": \"NA\",\r\n          \"value\": \"25\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"SA\",\r\n          \"value\": \"0\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AS\",\r\n          \"value\": \"0\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"EU\",\r\n          \"value\": \"0\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AF\",\r\n          \"value\": \"0\",\r\n          useHoverColor: \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AU\",\r\n          \"value\": \"0\",\r\n          useHoverColor: \"0\"\r\n        }\r\n        ]\r\n\r\n      },\r\n\r\n    },\r\n    imdbRatingConfig: {\r\n      type: \"bar2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.imdbRatingChartCosmatics,\r\n        data: [{\r\n          label: \"Action\",\r\n          value: \"7.3\"\r\n        },\r\n        {\r\n          label: \"Animation\",\r\n          value: \"5.8\"\r\n        },\r\n        {\r\n          label: \"Adventure\",\r\n          value: \"7.3\"\r\n        },\r\n        {\r\n          label: \"Comedy\",\r\n          value: \"7.1\"\r\n        },\r\n        {\r\n          label: \"Documentary\",\r\n          value: \"6.5\"\r\n        },\r\n        {\r\n          label: \"Drama\",\r\n          value: \"7\"\r\n        },\r\n        {\r\n          label: \"Reality-TV\",\r\n          value: \"6.3\"\r\n        },\r\n        {\r\n          label: \"Talk-show\",\r\n          value: \"7\"\r\n        }\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n  },\r\n  HBO: {\r\n    kpiData: {\r\n      revenue: \"6B\",\r\n      subscribers: \"150M\",\r\n      emmy: \"6\",\r\n      rating: \"8.04\"\r\n    },\r\n    revenueChartConfigs: {\r\n      type: \"mscombi2d\",\r\n      width: \"100%\",\r\n      height: \"300\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.revenueChartCosmatics,\r\n        categories: [{\r\n          category: [{\r\n            label: \"2013\"\r\n          },\r\n          {\r\n            label: \"2014\"\r\n          },\r\n          {\r\n            label: \"2015\"\r\n          },\r\n          {\r\n            label: \"2016\"\r\n          },\r\n          {\r\n            label: \"2017\"\r\n          },\r\n          {\r\n            label: \"2018\"\r\n          }\r\n\r\n          ]\r\n        }],\r\n        dataset: [{\r\n          renderAs: \"splinearea\",\r\n          showValues: \"0\",\r\n          data: [\r\n            {\r\n              value: \"4230000000\"\r\n            },\r\n            {\r\n              value: \"4580000000\"\r\n            },\r\n            {\r\n              value: \"4750000000\"\r\n            },\r\n            {\r\n              value: \"5000000000\"\r\n            },\r\n            {\r\n              value: \"5540000000\"\r\n            },\r\n            {\r\n              value: \"6000000000\"\r\n            }\r\n          ]\r\n\r\n        },\r\n        {\r\n          renderAs: \"spline\",\r\n          showValues: \"1\",\r\n          data: [\r\n            {\r\n              value: \"4230000000\"\r\n            },\r\n            {\r\n              value: \"4580000000\"\r\n            },\r\n            {\r\n              value: \"4750000000\"\r\n            },\r\n            {\r\n              value: \"5000000000\"\r\n            },\r\n            {\r\n              value: \"5540000000\"\r\n            },\r\n            {\r\n              value: \"6000000000\"\r\n            }\r\n          ]\r\n        }\r\n        ]\r\n      }\r\n    },\r\n    demogrphyconfig: {\r\n\r\n      type: \"doughnut2d\",\r\n      width: \"100%\",\r\n      height: \"160\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.demographyChartCosmatics,\r\n        \"data\": [{\r\n          \"label\": \"50-64 Years\",\r\n          \"value\": \"15\"\r\n        }, {\r\n          \"label\": \"30-49 Years\",\r\n          \"value\": \"44\"\r\n        },{\r\n          \"label\": \"18-29 Years\",\r\n          \"value\": \"41\"\r\n        } ]\r\n      }\r\n    },\r\n    subscriptionConfig: {\r\n\r\n      type: \"column2d\",\r\n      width: \"100%\",\r\n      height: \"204\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.subscriptionChartCosmatics,\r\n        data: [\r\n\r\n          {\r\n            label: \"2013\",\r\n            value: \"127\"\r\n          },\r\n          {\r\n            label: \"2014\",\r\n            value: \"138\"\r\n          },\r\n          {\r\n            label: \"2015\",\r\n            value: \"131\"\r\n          },\r\n          {\r\n            label: \"2016\",\r\n            value: \"134\"\r\n          },\r\n          {\r\n            label: \"2017\",\r\n            value: \"142\"\r\n          },\r\n          {\r\n            label: \"2018\",\r\n            value: \"150\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    awardConfigs: {\r\n      type: \"overlappedColumn2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.awardChartCosmatics,\r\n        categories: [{\r\n          category: [{\r\n            label: \"2013\"\r\n          }, {\r\n            label: \"2014\"\r\n          }, {\r\n            label: \"2015\"\r\n          }, {\r\n            label: \"2016\"\r\n          }, {\r\n            label: \"2017\"\r\n          }, {\r\n            label: \"2018\"\r\n          }]\r\n        }],\r\n        dataset: [{\r\n          seriesname: \"Nominations\",\r\n          data: [{\r\n            value: \"34\"\r\n          }, {\r\n            value: \"39\"\r\n          }, {\r\n            value: \"37\"\r\n          }, {\r\n            value: \"40\"\r\n          }, {\r\n            value: \"46\"\r\n          }, {\r\n            value: \"29\"\r\n          }]\r\n        }, {\r\n          seriesname: \"Wins\",\r\n          data: [{\r\n            value: \"7\"\r\n          }, {\r\n            value: \"4\"\r\n          }, {\r\n            value: \"14\"\r\n          }, {\r\n            value: \"6\"\r\n          }, {\r\n            value: \"10\"\r\n          }, {\r\n            value: \"6\"\r\n          }]\r\n        }]\r\n      }\r\n    },\r\n\r\n    subRegion: {\r\n      type: \"world\",\r\n      width: \"100%\",\r\n      height: \"430\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        \"chart\": chartCosmatics.subregionChartCosmatics,\r\n        colorrange: {\r\n          minvalue: \"0\",\r\n          startlabel: \"Low\",\r\n          endlabel: \"High\",\r\n          code: \"#4A4C4F\",\r\n          gradient: \"1\",\r\n          alpha: 0,\r\n          color: [{\r\n            minvalue: \"0\",\r\n            maxvalue: \"1\",\r\n            code: \"#DEDAF1\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"2\",\r\n            maxvalue: \"5\",\r\n            code: \"#BEB3E2\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"5\",\r\n            maxvalue: \"10\",\r\n            code: \"#ADA1DB\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"11\",\r\n            maxvalue: \"20\",\r\n            code: \"#786BC3\",\r\n\r\n          },\r\n          {\r\n            minvalue: \"21\",\r\n            maxvalue: \"150\",\r\n            code: \"#524CB5\",\r\n\r\n          }\r\n          ]\r\n        },\r\n        \"data\": [{\r\n          \"id\": \"NA\",\r\n          \"value\": \"150\"\r\n        },\r\n        {\r\n          \"id\": \"SA\",\r\n          \"value\": \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AS\",\r\n          \"value\": \"0\"\r\n        },\r\n        {\r\n          \"id\": \"EU\",\r\n          \"value\": \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AF\",\r\n          \"value\": \"0\"\r\n        },\r\n        {\r\n          \"id\": \"AU\",\r\n          \"value\": \"0\"\r\n        }\r\n        ]\r\n\r\n      },\r\n\r\n    },\r\n    imdbRatingConfig: {\r\n      type: \"bar2d\",\r\n      width: \"100%\",\r\n      height: \"330\",\r\n      containerBackgroundOpacity: '0',\r\n      dataFormat: \"json\",\r\n      dataSource: {\r\n        chart: chartCosmatics.imdbRatingChartCosmatics,\r\n        data: [{\r\n          label: \"Action\",\r\n          value: \"8.1\"\r\n        },\r\n        {\r\n          label: \"Animation\",\r\n          value: \"7.2\"\r\n        },\r\n        {\r\n          label: \"Biography\",\r\n          value: \"8.6\"\r\n        },\r\n        {\r\n          label: \"Comedy\",\r\n          value: \"8\"\r\n        },\r\n        {\r\n          label: \"Documentary\",\r\n          value: \"8.7\"\r\n        },\r\n        {\r\n          label: \"Drama\",\r\n          value: \"8\"\r\n        },\r\n        {\r\n          label: \"Reality-TV\",\r\n          value: \"8.2\"\r\n        },\r\n        {\r\n          label: \"Thriller\",\r\n          value: \"7.8\"\r\n        }\r\n        ]\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Menu from './Menu';\r\nimport Caption from './Caption';\r\nimport KpiData from '../utils/kpiData';\r\nimport Kpi from './Kpi';\r\nimport Subscribers from './Subscribers';\r\nimport Revenue from './Revenue';\r\nimport AwardRating from './AwardRating';\r\nimport DataSource from '../utils/config';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.sub = React.createRef();\r\n        this.rev = React.createRef();\r\n        this.award = React.createRef();\r\n        this.state = {\r\n            menus: [\r\n                { id: \"netflix\", value: \"Netflix\", active: true },\r\n                { id: \"amazon\", value: \"Amazon\", active: false },\r\n                { id: \"hulu\", value: \"Hulu\", active: false },\r\n                { id: \"hbo\", value: \"HBO\", active: false }\r\n            ],\r\n            caption: \"Netflix\",\r\n            kpiData: KpiData.Netflix,\r\n            dataSource: DataSource.Netflix\r\n        }\r\n    }\r\n    menuClick = (id) => {\r\n       \r\n        this.setState({ \"caption\": id });\r\n        this.setState({ \"kpiData\": KpiData[id] });\r\n        this.setState({ \"dataSource\": DataSource[id] })\r\n        this.state.menus.forEach(menu => {\r\n\r\n            id === menu.value ? menu.active = true : menu.active = false;\r\n        });\r\n        this.setState({ \"menus\": this.state.menus });\r\n       \r\n    }\r\n    kpiClick = (id) => {\r\n        if (id === \"Subscribers\")\r\n            ReactDOM.findDOMNode(this.sub.current).scrollIntoView({ block: 'center',  behavior: 'smooth' });\r\n        else if (id === \"Revenue\")\r\n            ReactDOM.findDOMNode(this.rev.current).scrollIntoView({ block: 'center', behavior: 'smooth', inline: \"nearest\" });\r\n        else if (id === \"Emmy Awards\" || \"IMDb Rating\")\r\n            ReactDOM.findDOMNode(this.award.current).scrollIntoView({ block: 'center', behavior: 'smooth' });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <nav className=\"navbar is-primary is-fixed-top\" >\r\n                    <div className=\"navbar-brand\">\r\n                        <div className=\"is-logo\">\r\n                            <h2 className=\"logo-wrapper\">W</h2>\r\n                        </div>\r\n                        <div className=\"navbar-item\">\r\n                            <span className=\"has-space\">\r\n                                <h2 className=\"caption\">Web Series Dashboard</h2>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <Menu menus={this.state.menus} handleClick={this.menuClick} />\r\n                </nav >\r\n                <div className=\"container\">\r\n                    <Caption caption={this.state.caption} />\r\n                    <section className=\"section is-kpi\">\r\n                        <span className=\"has-image\">\r\n                            <h3 className=\"snapshot\"> Snapshot 2018</h3>\r\n                        </span>\r\n                        <Kpi cards={this.state.kpiData} handleClick={this.kpiClick} />\r\n                        <hr className=\"path\" />\r\n                    </section>\r\n                    <Subscribers value={this.state.kpiData[0].value} icon={this.state.kpiData[0].icon} datasource={this.state.dataSource} ref={this.sub} />\r\n                    <Revenue value={this.state.kpiData[1].value} icon={this.state.kpiData[1].icon} datasource={this.state.dataSource} ref={this.rev} />\r\n                    <AwardRating awardValue={this.state.kpiData[2].value} awardIcon={this.state.kpiData[2].icon} ratingValue={this.state.kpiData[3].value} ratingIcon={this.state.kpiData[3].icon} datasource={this.state.dataSource} ref={this.award} />\r\n                    <section className=\"section has-footer\">www.fusioncharts.com</section>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Dashboard;","import React, { Component } from 'react';\nimport '../node_modules/bulma/css/bulma.css';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Dashboard />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/doller.6a39aee4.svg\";","module.exports = __webpack_public_path__ + \"static/media/rss.549aa6e7.svg\";"],"sourceRoot":""}